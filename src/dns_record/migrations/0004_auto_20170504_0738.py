# -*- coding: utf-8 -*-
# Generated by Django 1.10 on 2017-05-04 07:38
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('dns_record', '0003_auto_20170501_1420'),
    ]

    operations = [
        migrations.AlterField(
            model_name='dnsrecord',
            name='data',
            field=models.TextField(blank=True, default=None, help_text='IP address / Host name / Full domain name', max_length=255, null=True, verbose_name='Data'),
        ),
        migrations.AlterField(
            model_name='dnsrecord',
            name='expire',
            field=models.IntegerField(blank=True, default=None, help_text='Time in seconds that a secondary name server will treat its zone file as valid when the primary name server cannot be contacted. ', null=True, verbose_name='Expire Interval'),
        ),
        migrations.AlterField(
            model_name='dnsrecord',
            name='minimum',
            field=models.IntegerField(blank=True, default=None, help_text='Defines the time in seconds that any name server or resolver should cache a negative response.', null=True, verbose_name='Negative Caching Time To Live'),
        ),
        migrations.AlterField(
            model_name='dnsrecord',
            name='mx_priority',
            field=models.IntegerField(blank=True, default=None, help_text='Order in which the Servers are supposed to be contacted', null=True, verbose_name='MX Priority'),
        ),
        migrations.AlterField(
            model_name='dnsrecord',
            name='primary_ns',
            field=models.CharField(blank=True, default=None, help_text='The primary name server for the domain', max_length=255, null=True, verbose_name='Primary Name Server'),
        ),
        migrations.AlterField(
            model_name='dnsrecord',
            name='refresh',
            field=models.IntegerField(blank=True, default=None, help_text='Time in seconds that a secondary name server should wait between zone file update checks', null=True, verbose_name='Refresh Interval'),
        ),
        migrations.AlterField(
            model_name='dnsrecord',
            name='resp_person',
            field=models.CharField(blank=True, default=None, help_text='Responsible person for SOA record', max_length=255, null=True, verbose_name='Responsible Person'),
        ),
        migrations.AlterField(
            model_name='dnsrecord',
            name='retry',
            field=models.IntegerField(blank=True, default=None, help_text='Time in seconds that a secondary name server should wait before trying to contact the primary name server again after a failed attempt to check for a zone file update.', null=True, verbose_name='Retry Interval'),
        ),
        migrations.AlterField(
            model_name='dnsrecord',
            name='serial',
            field=models.BigIntegerField(blank=True, default=None, help_text='Serial number of the zone file is incremented each time a change is made.', null=True, verbose_name='Serial'),
        ),
    ]
